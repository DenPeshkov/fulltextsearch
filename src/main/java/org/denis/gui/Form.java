package org.denis.gui;

import org.denis.files.SearchFiles;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;

public class Form extends JFrame {

	private JPanel mPanel;
	private JButton directory;
	private JTextArea textFile;
	private JTextField pathText;
	private JTextField textToSearch;
	private JTree tree;
	private JTextField extension;
	private JFileChooser fileChooser = new JFileChooser();

	public Form() {
		$$$setupUI$$$();
		setContentPane(mPanel);
		setVisible(true);

		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		this.setPreferredSize(new Dimension(800, 800));
		this.pack();

		textToSearch.setBorder(BorderFactory.createTitledBorder("Text to search"));
		pathText.setBorder(BorderFactory.createTitledBorder("Path"));
		extension.setBorder(BorderFactory.createTitledBorder("Extension"));
		extension.setText(".log");
		tree.setBorder(BorderFactory.createTitledBorder("Tree"));
		textFile.setBorder(BorderFactory.createTitledBorder("Text"));
		mPanel.setMinimumSize(new Dimension(1000, 1000));

		directory.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				fileChooser.setDialogTitle("Choose directory");
				fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
				int result = fileChooser.showOpenDialog(Form.this);
				if (result == JFileChooser.APPROVE_OPTION)
					pathText.setText(fileChooser.getSelectedFile().toString());
			}
		});
	}

	public static void main(String[] args) throws ClassNotFoundException, UnsupportedLookAndFeelException, InstantiationException, IllegalAccessException {
		Form form = new Form();
	}

	private void createUIComponents() {
		// TODO: place custom component creation code here
		DefaultMutableTreeNode node = null;
		try {
			Iterable<Path> paths = SearchFiles.traverseTree(Paths.get("/home/denis"), "*");
			node = FilesToTree.getNode(paths);
		} catch (IOException exp) {
			throw new RuntimeException(exp);
		}
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		mPanel = new JPanel();
		mPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 4, new Insets(5, 5, 5, 5), -1, -1));
		mPanel.setAutoscrolls(false);
		mPanel.setBackground(new Color(-1));
		mPanel.setDoubleBuffered(false);
		mPanel.setEnabled(false);
		mPanel.setForeground(new Color(-3552823));
		mPanel.putClientProperty("html.disable", Boolean.TRUE);
		final JScrollPane scrollPane1 = new JScrollPane();
		mPanel.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(200, 200), new Dimension(200, 600), null, 0, false));
		tree = new JTree();
		tree.setBackground(new Color(-1));
		tree.setFocusable(false);
		tree.setForeground(new Color(-1));
		scrollPane1.setViewportView(tree);
		final JScrollPane scrollPane2 = new JScrollPane();
		scrollPane2.setHorizontalScrollBarPolicy(31);
		mPanel.add(scrollPane2, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(200, 200), new Dimension(600, 600), null, 0, false));
		textFile = new JTextArea();
		textFile.setBackground(new Color(-1));
		textFile.setEditable(true);
		textFile.setLineWrap(true);
		scrollPane2.setViewportView(textFile);
		textToSearch = new JTextField();
		textToSearch.setBackground(new Color(-1));
		textToSearch.setCaretColor(new Color(-16777216));
		textToSearch.setDisabledTextColor(new Color(-1));
		textToSearch.setForeground(new Color(-16777216));
		textToSearch.setInheritsPopupMenu(false);
		textToSearch.setMargin(new Insets(2, 5, 2, 5));
		mPanel.add(textToSearch, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		pathText = new JTextField();
		pathText.setBackground(new Color(-1));
		pathText.setCaretColor(new Color(-16777216));
		pathText.setDisabledTextColor(new Color(-1));
		pathText.setForeground(new Color(-16777216));
		pathText.setInheritsPopupMenu(false);
		pathText.setMargin(new Insets(2, 5, 2, 5));
		mPanel.add(pathText, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
		directory = new JButton();
		directory.setBackground(new Color(-1907998));
		directory.setForeground(new Color(-16777216));
		directory.setHideActionText(false);
		directory.setHorizontalTextPosition(0);
		directory.setLabel("...");
		directory.setOpaque(true);
		directory.setText("...");
		mPanel.add(directory, new com.intellij.uiDesigner.core.GridConstraints(1, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		extension = new JTextField();
		extension.setBackground(new Color(-1));
		mPanel.add(extension, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return mPanel;
	}

}
